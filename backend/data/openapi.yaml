components:
  schemas:
    AnalysisResultDTO:
      properties:
        analysisDate:
          format: date
          type: string
        detectedAbnormalities:
          items:
            type: string
          type: array
        doctorComments:
          type: string
        doctorReviewed:
          type: boolean
        id:
          format: int32
          type: integer
        xrayImageId:
          format: int32
          type: integer
      type: object
    AnnotationDTO:
      properties:
        analysisResultId:
          format: int32
          type: integer
        annotationData:
          type: string
        annotationId:
          format: int32
          type: integer
        createdAt:
          format: date-time
          type: string
        doctorId:
          format: int32
          type: integer
      type: object
    AppointmentDTO:
      properties:
        appointmentDateTime:
          format: date-time
          type: string
        createdAt:
          format: date
          type: string
        doctorId:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        patientId:
          format: int32
          type: integer
        status:
          type: string
        updatedAt:
          format: date
          type: string
      type: object
    ChatDTO:
      properties:
        id:
          format: int32
          type: integer
        messageIds:
          items:
            format: int32
            type: integer
          type: array
        patricipantsIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    DoctorDTO:
      properties:
        appointmentList:
          items:
            format: int32
            type: integer
          type: array
        availability:
          type: string
        clinicAddress:
          type: string
        createdAt:
          format: date
          type: string
        email:
          type: string
        firstName:
          type: string
        id:
          format: int32
          type: integer
        lastName:
          type: string
        medicalLicenceId:
          format: int32
          type: integer
        passwordHash:
          type: string
        patientIds:
          items:
            format: int32
            type: integer
          type: array
        phoneNumber:
          format: int32
          type: integer
        specialization:
          type: string
        updatedAt:
          format: date
          type: string
        workingHours:
          type: string
      type: object
    JsonNode:
      type: object
    LoginDTO:
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    MessageDTO:
      properties:
        authorId:
          format: int32
          type: integer
        chatId:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        text:
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    PatientDTO:
      properties:
        address:
          type: string
        appointmentList:
          items:
            format: int32
            type: integer
          type: array
        consentToUseImages:
          type: boolean
        createdAt:
          format: date
          type: string
        dateOfBirth:
          format: date
          type: string
        doctorList:
          items:
            format: int32
            type: integer
          type: array
        email:
          type: string
        firstName:
          type: string
        id:
          format: int32
          type: integer
        lastName:
          type: string
        passwordHash:
          type: string
        phoneNumber:
          format: int32
          type: integer
        updatedAt:
          format: date
          type: string
        xrayImages:
          items:
            format: int32
            type: integer
          type: array
      type: object
    XRayImageDTO:
      properties:
        bodyPart:
          type: string
        id:
          format: int32
          type: integer
        patientId:
          format: int32
          type: integer
        uploadDate:
          format: date
          type: string
      type: object
info:
  title: OpenAPI definition
  version: v0
openapi: 3.0.1
paths:
  /analysis-result:
    get:
      operationId: getAllAnalysisResults
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AnalysisResultDTO'
                type: array
          description: OK
      tags:
      - analysis-result-controller
    post:
      operationId: createAnalysisResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisResultDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnalysisResultDTO'
          description: OK
      tags:
      - analysis-result-controller
  /analysis-result/image/{id}:
    get:
      operationId: getAnalysisResultByImageId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnalysisResultDTO'
          description: OK
      tags:
      - analysis-result-controller
  /analysis-result/{id}:
    delete:
      operationId: deleteAnalysisResult
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - analysis-result-controller
    get:
      operationId: getAnalysisResultById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnalysisResultDTO'
          description: OK
      tags:
      - analysis-result-controller
    put:
      operationId: updateAnalysisResult
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisResultDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnalysisResultDTO'
          description: OK
      tags:
      - analysis-result-controller
  /annotation:
    get:
      operationId: getAllAnnotations
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AnnotationDTO'
                type: array
          description: OK
      tags:
      - annotation-controller
    post:
      operationId: createAnnotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationDTO'
          description: OK
      tags:
      - annotation-controller
  /annotation/{id}:
    delete:
      operationId: deleteAnnotation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - annotation-controller
    get:
      operationId: getAnnotationById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationDTO'
          description: OK
      tags:
      - annotation-controller
    put:
      operationId: updateAnnotation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnnotationDTO'
          description: OK
      tags:
      - annotation-controller
  /annotation/{id}/json:
    get:
      operationId: getAnnotationJsonDataById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonNode'
          description: OK
      tags:
      - annotation-controller
  /appointment:
    get:
      operationId: getAllAppointments
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AppointmentDTO'
                type: array
          description: OK
      tags:
      - appointment-controller
    post:
      operationId: createAppointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppointmentDTO'
          description: OK
      tags:
      - appointment-controller
  /appointment/doctor/{doctorId}:
    get:
      operationId: getAppointmentsByDoctorId
      parameters:
      - in: path
        name: doctorId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AppointmentDTO'
                type: array
          description: OK
      tags:
      - appointment-controller
  /appointment/patient/{patientId}:
    get:
      operationId: getAppointmentsByPatientId
      parameters:
      - in: path
        name: patientId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AppointmentDTO'
                type: array
          description: OK
      tags:
      - appointment-controller
  /appointment/{id}:
    delete:
      operationId: deleteAppointment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - appointment-controller
    get:
      operationId: getAppointmentById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppointmentDTO'
          description: OK
      tags:
      - appointment-controller
    put:
      operationId: updateAppointment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppointmentDTO'
          description: OK
      tags:
      - appointment-controller
  /chat:
    get:
      operationId: getAllChats
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ChatDTO'
                type: array
          description: OK
      tags:
      - chat-controller
    post:
      operationId: createChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatDTO'
          description: OK
      tags:
      - chat-controller
  /chat/:
    post:
      operationId: createChat_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatDTO'
          description: OK
      tags:
      - chat-controller
  /chat/{id}:
    delete:
      operationId: deleteChat
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - chat-controller
    get:
      operationId: getChat
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatDTO'
          description: OK
      tags:
      - chat-controller
    put:
      operationId: updateChat
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatDTO'
          description: OK
      tags:
      - chat-controller
  /doctor/:
    get:
      operationId: getAllDoctors
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DoctorDTO'
                type: array
          description: OK
      tags:
      - doctor-controller
    post:
      operationId: createDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DoctorDTO'
          description: OK
      tags:
      - doctor-controller
  /doctor/by-patient/{patientId}:
    get:
      operationId: getDoctorsByPatientId
      parameters:
      - in: path
        name: patientId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DoctorDTO'
                type: array
          description: OK
      tags:
      - doctor-controller
  /doctor/{doctorId}/patients/{patientId}:
    delete:
      operationId: removePatientFromDoctor
      parameters:
      - in: path
        name: doctorId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: patientId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - doctor-controller
    put:
      operationId: addPatientToDoctor
      parameters:
      - in: path
        name: doctorId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: patientId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - doctor-controller
  /doctor/{id}:
    delete:
      operationId: deleteDoctor
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - doctor-controller
    get:
      operationId: getDoctorById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DoctorDTO'
          description: OK
      tags:
      - doctor-controller
    put:
      operationId: updateDoctor
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DoctorDTO'
          description: OK
      tags:
      - doctor-controller
  /login:
    post:
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - login-controller
  /message:
    get:
      operationId: getAllMessages
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/MessageDTO'
                type: array
          description: OK
      tags:
      - message-controller
    post:
      operationId: createMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageDTO'
          description: OK
      tags:
      - message-controller
  /message/chat/{chatId}:
    get:
      operationId: getMessages
      parameters:
      - in: path
        name: chatId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/MessageDTO'
                type: array
          description: OK
      tags:
      - message-controller
  /message/{id}:
    delete:
      operationId: deleteMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - message-controller
    get:
      operationId: getMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageDTO'
          description: OK
      tags:
      - message-controller
    put:
      operationId: updateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageDTO'
          description: OK
      tags:
      - message-controller
  /patient/:
    get:
      operationId: getAllPatients
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PatientDTO'
                type: array
          description: OK
      tags:
      - patient-controller
    post:
      operationId: createPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientDTO'
          description: OK
      tags:
      - patient-controller
  /patient/by-doctor/{id}:
    get:
      operationId: getPatientByDoctorId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PatientDTO'
                type: array
          description: OK
      tags:
      - patient-controller
  /patient/consent/{id}:
    put:
      operationId: submitConsentForm
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientDTO'
          description: OK
      tags:
      - patient-controller
  /patient/{id}:
    delete:
      operationId: deletePatient
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - patient-controller
    get:
      operationId: getPatientById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientDTO'
          description: OK
      tags:
      - patient-controller
    put:
      operationId: updatePatient
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientDTO'
          description: OK
      tags:
      - patient-controller
  /xray-images:
    get:
      operationId: getAllImages
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/XRayImageDTO'
                type: array
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/body-part/{bodyPart}:
    get:
      operationId: getImagesByBodyPart
      parameters:
      - in: path
        name: bodyPart
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/XRayImageDTO'
                type: array
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/data:
    post:
      operationId: saveImageData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XRayImageDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XRayImageDTO'
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/file/{id}:
    get:
      operationId: getImageFile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/files/consented:
    get:
      operationId: getConsentedImagesAsZip
      responses:
        '200':
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/full:
    post:
      operationId: saveFullXRayImage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/XRayImageDTO'
                file:
                  format: binary
                  type: string
              required:
              - data
              - file
              type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XRayImageDTO'
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/patient/{patientId}:
    get:
      operationId: getImagesByPatientId
      parameters:
      - in: path
        name: patientId
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/XRayImageDTO'
                type: array
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/{id}:
    delete:
      operationId: deleteImage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      tags:
      - x-ray-image-controller
    get:
      operationId: getImageById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XRayImageDTO'
          description: OK
      tags:
      - x-ray-image-controller
    put:
      operationId: updateImage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XRayImageDTO'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XRayImageDTO'
          description: OK
      tags:
      - x-ray-image-controller
  /xray-images/{id}/upload:
    post:
      operationId: uploadImage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              required:
              - file
              type: object
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XRayImageDTO'
          description: OK
      tags:
      - x-ray-image-controller
servers:
- description: Generated server url
  url: http://localhost:8080

